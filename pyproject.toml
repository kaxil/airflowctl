[tool.poetry]
name = "airflowctl"
version = "0.2.11"
description = "A CLI tool to streamline getting started with Apache Airflowâ„¢ and managing multiple Airflow projects."
authors = [
    "Kaxil Naik <kaxilnaik@gmail.com>",
]
readme = "README.md"
keywords = ["airflow", "installer", "cli", "apache-airflow"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: Apache Airflow",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
license = "Apache-2.0"
repository = "https://github.com/kaxil/airflowctl"

[tool.poetry.dependencies]
python = "^3.8"
typer = {extras = ["all"], version = "^0.9.0"}
httpx = ">0.24.1"
rich-argparse = "^1.2.0"
rich = "^13.5.2"
pyyaml = "^6.0.1"
python-dotenv = ">=0.21.0"
psutil = "^5.9.5"
packaging = "^23.1"
uv = ">=0.4"

[tool.poetry.scripts]
airflowctl = "airflowctl.cli:app"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
apache-airflow  = [
    { version = "^2.10", python = ">=3.8,<3.13" }
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 110
target-version = ['py37', 'py38', 'py39', 'py310', 'py311', 'py312']

[tool.ruff]
line-length = 110
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes `E` and `F` codes by default.
extend-select = [
    "W",    # pycodestyle warnings
    "I",    # isort
    "C90",  # Complexity
    "C4",    # flake8-comprehensions
    "ISC",  # flake8-implicit-str-concat
    "T10",  # flake8-debugger
    "A",    # flake8-builtins
    "UP",   # pyupgrade
]

# Remove this in future
extend-ignore = ["A002", "C901", "E402", "E501", "ISC001", "ISC003", "UP030"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]


[tool.ruff.mccabe]
max-complexity = 6

[tool.ruff.isort]
combine-as-imports = true
